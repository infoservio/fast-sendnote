{% extends "_layouts/cp" %}
{% do view.registerAssetBundle("infoservio\\mailmanager\\assetbundles\\template\\main\\TemplateAssetBundle") %}
{% do view.registerAssetBundle("infoservio\\mailmanager\\assetbundles\\template\\form\\TemplateFormAssetBundle") %}
{% do view.registerAssetBundle("infoservio\\mailmanager\\assetbundles\\parsley\\ParsleyAssetBundle") %}
{#{% do view.registerAssetBundle("infoservio\\mailmanager\\assetbundles\\redactor\\RedactorAssetBundle") %}#}

{% set title = (isUpdated ? "Edit Template" : "Create Template")|t('app') %}

{% block content %}
    {% if errors %}
        <div class="alert alert-danger" role="alert">
            <strong>Oh snap!</strong> Change a few things up and try submitting again.
            <ul>
                {% for key, error in errors %}
                    <li>{{ key }}: {{ error[0] }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
    <form method="post" action="{{ isUpdated ? 'edit' : 'create' }}" id="template-form">
        <input hidden name="id" value="{{ isUpdated ? template.id : '' }}" />
        <div class="form-group">
            <label for="inputTemplateName">Template Name</label>
            <small id="nameHelp" class="form-text text-muted">Template name for your understanding.</small>
            <input name="name" type="text" class="form-control" id="inputTemplateName" aria-describedby="nameHelp"
                   placeholder="Enter Template Name"
                   value="{{ template ? template.name : '' }}"
                   data-parsley-required
                   data-parsley-maxlength="255"
            />
        </div>
        <div class="form-group">
            <label for="inputTemplateSlug">Slug</label>
            <small id="keyHelp" class="form-text text-muted">Slug is using for sending the right template.</small>
            <input name="slug" type="text" class="form-control" id="inputTemplateSlug" aria-describedby="keyHelp"
                   placeholder="Enter Template Slug"
                   value="{{ template ? template.slug : '' }}"
                   data-parsley-required
                   data-parsley-maxlength="20"
            />
        </div>
        <div class="form-group">
            <label for="inputSubject">Subject</label>
            <small id="subjectHelp" class="form-text text-muted">Subject is using as a header for email.</small>
            <input name="subject" type="text" class="form-control" id="inputSubject" aria-describedby="subjectHelp"
                   placeholder="Enter Subject"
                   value="{{ template ? template.subject : '' }}"
                   data-parsley-required
                   data-parsley-maxlength="255"
            />
        </div>
        <div class="form-group">
            <label for="inputSendEmail">Send Email</label>
            <small id="sendEmailHelp" class="form-text text-muted">Do you want to send emails for this template?</small>
            <select name="sendEmail"data-width="100%" class="form-control" id="inputSendEmail" aria-describedby="sendEmailHelp" data-parsley-required>
                <option value="0" {{ (0 == template.sendEmail) ? 'selected' : '' }}>No</option>
                <option value="1" {{ (1 == template.sendEmail) ? 'selected' : '' }}>Yes</option>
            </select>
        </div>
        <div class="form-group">
            <label for="inputTemplate">Template</label>
            <small id="templateHelp" class="form-text text-muted">Template is using as a template for email. You can put special params using brackets. Example: 'Dear {firstname}'</small>
            <textarea id="template" name="template"class="form-control" id="inputTemplate" aria-describedby="templateHelp"
                      placeholder="Enter template"
                      data-parsley-required>
                {{ (template ? template.template : '') }}
            </textarea>
        </div>
        <button type="submit" class="btn btn-primary form-btn" id="submit-btn">{{ isUpdated ? 'Update' : 'Create' }}</button>
    </form>
    <script src="https://cdn.ckeditor.com/4.7.3/standard/ckeditor.js"></script>
    <script>
        var errors = {{ errors ? errors|json_encode|raw : 'null' }};
        CKEDITOR.replace('template', {
            fullPage: true,
            allowedContent: true,
            protectedTags: 'html|head|body'
        });
    </script>
{% endblock %}